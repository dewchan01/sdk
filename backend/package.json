{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "rimraf dist && tsc -p tsconfig.build.json && copyfiles -u 2 src/config/*.json dist/config/",
    "build:prod": "npm run build",
    "typeorm": "ts-node ./node_modules/typeorm/cli",
    "typeorm:createSampleData": "npm run typeorm migration:create ../backend/src/data-access/database/migration/sample-data",
    "typeorm:generate": "npm run typeorm migration:generate -- -d ../backend/src/data-access/database/data-source.ts",
    "typeorm:migrate": "npm run typeorm migration:run -- -d ../backend/src/data-access/database/data-source.ts",
    "typeorm:revert": "npm run typeorm migration:revert -- -d ../backend/src/data-access/database/data-source.ts",
    "typeorm:drop": "npm run typeorm schema:drop -- -d ../backend/src/data-access/database/data-source.ts",
    "db:migrate:prod": "cross-env NODE_ENV=production && npm run typeorm:migrate",
    "db:migrate:dev": "cross-env NODE_ENV=development && npm run typeorm:migrate",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "npm run build && npm run db:migrate:dev && ts-node -r tsconfig-paths/register src/main.ts",
    "start:dev": "tsc-watch -p tsconfig.build.json --onSuccess \"node dist/main.js\"",
    "start:debug": "tsc-watch -p tsconfig.build.json --onSuccess \"node --inspect-brk dist/main.js\"",
    "start:prod": "npm run db:migrate:prod && node dist/main.js --production",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "openApi:docFile:generate": "npm run build && ts-node -r tsconfig-paths/register src/main.ts --openApiOutputFile=openApi.json",
    "openApi:ng13Sdk:all": "npm run openApi:docFile:generate && npm run openApi:ng13Sdk:clean && npm run openApi:ng13Sdk:generate && npm run openApi:ng13Sdk:build && npm run openApi:ng13Sdk:pack",
    "openApi:ng13Sdk:build": "cd openapi.ng13 && npm i && npm run build",
    "openApi:ng13Sdk:clean": "rimraf openapi.ng13",
    "openApi:ng13Sdk:generate": "cross-env openapi-generator-cli generate -i openApi.json -g typescript-angular -o openapi.ng13 -p --additional-properties=ngVersion=13,npmName=@dw/todo-app-ng13-sdk,npmVersion=$npm_package_version",
    "openApi:ng13Sdk:getTarFile": "npm pack ./openapi.ng13/dist --dry-run",
    "openApi:ng13Sdk:pack": "npm pack ./openapi.ng13/dist",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.3.1",
    "@nestjs/typeorm": "^10.0.2",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "copyfiles": "^2.4.1",
    "cross-env": "^7.0.3",
    "minimist": "^1.2.8",
    "nest-openapi-tools": "^6.0.3",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.12.0",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "tsc-watch": "^6.2.0",
    "typeorm": "^0.3.20"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
